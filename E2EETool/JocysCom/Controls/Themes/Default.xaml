<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib">

	<SolidColorBrush x:Key="SolidColorBrush_BFF">#ff000000</SolidColorBrush>

	<!--  Window  -->

	<Style TargetType="Window">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="4" />
	</Style>

	<!--  DockPanel  -->

	<Style TargetType="DockPanel">
		<Setter Property="Margin" Value="8" />
	</Style>

	<!--  Grid  -->

	<Style TargetType="Grid">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
	</Style>

	<!--  GroupBox  -->

	<Style TargetType="GroupBox">
		<Setter Property="Margin" Value="4" />
	</Style>

	<!--  StackPanel  -->

	<Style x:Name="Container" TargetType="StackPanel">
		<Setter Property="Margin" Value="0" />
	</Style>

	<Style x:Key="ButtonStackPanel" TargetType="StackPanel">
		<Setter Property="Margin" Value="3,1,3,1" />
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="IsHitTestVisible" Value="False" />
	</Style>

	<!--  Button  -->

	<Style x:Key="Button_Default" TargetType="Button">
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Margin" Value="3,3,3,3" />
		<Setter Property="Padding" Value="3,3,3,3" />
		<Setter Property="MinWidth" Value="75" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="Button" BasedOn="{StaticResource Button_Default}" TargetType="Button" />

	<Style BasedOn="{StaticResource Button_Default}" TargetType="Button" />

	<!--  Button -ToolBar  -->

	<Style x:Key="ToolBarButton" TargetType="Button">
		<Setter Property="Margin" Value="0,0,0,0" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  TextBox  -->

	<Style x:Key="TextBox_Default" TargetType="TextBox">
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Margin" Value="3,3,3,3" />
		<Setter Property="Padding" Value="3,3,3,3" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<!--<Setter Property="TextAlignment" Value="Center" />
		<Setter Property="Background" Value="#333333" />
		<Setter Property="Foreground" Value="#FFFFFF" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="120" />
		-->
		<Style.Triggers>
			<Trigger Property="IsReadOnly" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style BasedOn="{StaticResource TextBox_Default}" TargetType="TextBox" />

	<Style x:Key="TextBoxReadOnly" BasedOn="{StaticResource TextBox_Default}" TargetType="TextBox">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="IsReadOnly" Value="True" />
	</Style>

	<!--  TextBox - Cell  -->

	<Style x:Key="TextBoxCell" BasedOn="{StaticResource TextBox_Default}" TargetType="TextBox">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Padding" Value="1,4,1,2" />
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="TextBoxRightCell" BasedOn="{StaticResource TextBoxCell}" TargetType="TextBox">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="TextAlignment" Value="Right" />
	</Style>

	<Style x:Key="TextBoxCenterCell" BasedOn="{StaticResource TextBoxCell}" TargetType="TextBox">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="TextAlignment" Value="Center" />
	</Style>

	<!--  TextBlock  -->

	<Style x:Key="TextBlock_Default" TargetType="TextBlock">
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Margin" Value="3,3,3,3" />
		<Setter Property="Padding" Value="3,3,3,3" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style BasedOn="{StaticResource TextBlock_Default}" TargetType="TextBlock" />

	<!--  TextBlock - Cell  -->

	<Style x:Key="TextBlockCell" BasedOn="{StaticResource TextBlock_Default}" TargetType="TextBlock">
		<Setter Property="Padding" Value="3,4,3,2" />
		<Setter Property="Margin" Value="0,0,0,0" />
	</Style>

	<Style x:Key="TextBlockRightCell" BasedOn="{StaticResource TextBlockCell}" TargetType="TextBlock">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="TextAlignment" Value="Right" />
	</Style>

	<Style x:Key="TextBlockCenterCell" BasedOn="{StaticResource TextBlockCell}" TargetType="TextBlock">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="TextAlignment" Value="Center" />
	</Style>

	<!--  DataGrid  -->

	<Style x:Key="DataGridDefault" TargetType="DataGrid">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CanUserAddRows" Value="False" />
		<Setter Property="CanUserDeleteRows" Value="False" />
		<Setter Property="GridLinesVisibility" Value="Horizontal" />
		<Setter Property="HeadersVisibility" Value="Column" />
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
	</Style>

	<Style BasedOn="{StaticResource DataGridDefault}" TargetType="DataGrid" />

	<Style x:Key="DataGridReadOnly" BasedOn="{StaticResource DataGridDefault}" TargetType="DataGrid">
		<Setter Property="RowBackground" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter Property="IsReadOnly" Value="true" />
		<Setter Property="BorderThickness" Value="1,0,0,0" />
		<Setter Property="GridLinesVisibility" Value="All" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
		<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
	</Style>

	<!--  DataGridTextColumn  -->

	<Style BasedOn="{DynamicResource DataGridTextColumnDefault}" TargetType="DataGridTextColumn" />

	<!--  ComboBox  -->

	<Style x:Key="ComboBoxDefault" TargetType="ComboBox">
		<Setter Property="Margin" Value="3,3,3,3" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="ComboBoxFix" BasedOn="{StaticResource ComboBoxDefault}" TargetType="ComboBox">
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="True">
				<Setter Property="Padding" Value="3,3,3,3" />
			</Trigger>
			<Trigger Property="IsEditable" Value="False">
				<Setter Property="Padding" Value="-2,-2,-2,-2" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style BasedOn="{StaticResource ComboBoxDefault}" TargetType="ComboBox" />

	<!--  ComboBox - Grid  -->

	<Style x:Key="ComboBoxGrid" BasedOn="{StaticResource ComboBoxDefault}" TargetType="ComboBox">
		<Setter Property="Padding" Value="3,3,3,3" />
		<Setter Property="Margin" Value="3,3,3,3" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<!--  CheckBox  -->

	<Style x:Key="CheckBox_Default" TargetType="CheckBox">
		<Setter Property="Margin" Value="3,3,3,3" />
		<Setter Property="Padding" Value="3,3,3,3" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>

	<Style BasedOn="{StaticResource CheckBox_Default}" TargetType="CheckBox" />

	<!--  CheckBox - Cell  -->

	<Style x:Key="CheckBoxCell" BasedOn="{StaticResource CheckBox_Default}" TargetType="CheckBox">
		<Setter Property="Margin" Value="3,0,3,0" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<!--  ContentControl  -->

	<Style x:Key="ButtonContentControl" TargetType="ContentControl">
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
	</Style>

	<!--  Label  -->

	<Style x:Key="ButtonLabel" TargetType="Label">
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="Padding" Value="4,2,4,2" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<!--<Setter Property="MinWidth" Value="48" />-->
	</Style>

	<Style x:Key="LabelGrid" TargetType="Label">
		<Setter Property="Padding" Value="4,2,4,2" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>

	<!--  ToolBarPanel  -->

	<Style x:Key="MainToolBarPanel" TargetType="ToolBarPanel">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="ClipToBounds" Value="True" />
		<Setter Property="Margin" Value="0,0,0,0" />
	</Style>

	<!--  ToolBar  -->

	<Style x:Key="MainToolBar" TargetType="ToolBar">
		<Setter Property="Margin" Value="0,0,-13,-3" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="ToolBar.OverflowMode" Value="Never" />
		<Setter Property="ToolBarTray.IsLocked" Value="True" />
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
	</Style>

	<!--  Separator  -->

	<Style x:Key="MainSeparator" TargetType="Separator">
		<Setter Property="Margin" Value="1,3,1,3" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border
						VerticalAlignment="Stretch"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
